name: Build and upload release

on:
    workflow_dispatch: # trigger manually
        inputs:
            tag_override:
                description: "Tag"
                type: string
                required: false

env:
    node_version: "16.x"

jobs:
    build-and-upload-release:
        runs-on: ubuntu-latest
        steps:
            - name: Apply tag override and parse ref
              uses: bisgardo/github-action-parse-ref@v1
              id: ref
              with:
                  ref: "${{github.event.inputs.tag_override || github.ref}}"
                  default-ref-type: tags
            - name: Fail if ref is not a tag
              if: "steps.ref.outputs.ref-type != 'tags'"
              run: exit 1
            - name: Parse tag name
              uses: bisgardo/github-action-regex-parse@v1
              id: tag
              with:
                  pattern: "(?<name>(?<package>.*?)/(?<version>.*))"
                  input: "${{steps.ref.outputs.ref-name}}"
            - name: Checkout subproject and extract tag message
              id: checkout
              # Clone repository into temp directory and copy the subproject into the workspace along with the shared 'yarn.lock' file
              # (cannot use 'actions/checkout' because that doesn't allow checkout out the repo outside the workspace dir;
              # see 'https://github.com/actions/checkout/issues/327' - alternatively we could use a temp dir inside the workspace).
              run: |
                  tmp_repo_dir="${{runner.temp}}/repo"
                  git clone --branch="${{steps.tag.outputs.name}}" "${{github.server_url}}/${{github.repository}}" "${tmp_repo_dir}"
                  tag_msg="$(git -C "${tmp_repo_dir}" for-each-ref "${{steps.ref.outputs.ref}}" --format='%(contents)')"
                  echo "tag_msg<<EOT
                  ${tag_msg}
                  EOT" >> "${GITHUB_OUTPUT}"
                  cp -rT "${tmp_repo_dir}/packages/${{steps.tag.outputs.package}}" .
                  cp "${tmp_repo_dir}/yarn.lock" .
                  ls
            - name: Fail if tag is not "annotated" or the message is empty
              if: "steps.checkout.outputs.tag_msg == ''"
              run: exit 1
            - name: Check that version matches 'package.json' up to build version
              run: |
                  v="$(npm pkg get version | xargs)" # piping through 'xargs' removes quotes
                  [[ "${{steps.tag.outputs.version}}" = ${v}-* ]]
            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: "${{env.node_version}}"
                  #cache: yarn
            - name: Install dependencies
              run: yarn install --immutable
            - name: debug yarn.lock
              run: cat yarn.lock
            - name: debug node_modules
              run: tree node_modules
            - name: Build and archive
              run: |
                  yarn build
                  zip dist.zip ./dist/*
            - name: Extract changelog entries
              uses: ./.github/actions/changelog-extract
              id: changelog
              with:
                  file: ./CHANGELOG.md
                  version: "${{steps.tag.outputs.version}}"
            - name: Upload package as GitHub release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: "${{steps.tag.outputs.name}}"
                  # Release body is the message of the annotated tag followed by the changelog entries for the version.
                  body: |
                      ${{steps.checkout.outputs.tag_msg}}
                      
                      # Changelog
                      
                      ${{steps.changelog.outputs.changelog}}
                  files: "./dist.zip"
                  name: "${{steps.tag.outputs.package}}: ${{steps.tag.outputs.version}}"
                  # The method for auto-generating release notes just lists all commits, also those irrelevant to the subproject.
                  generate_release_notes: false
