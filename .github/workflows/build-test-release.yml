name: Build, test, and upload release

on:
    workflow_dispatch: # trigger manually
        inputs:
            tag_override:
                description: "Tag"
                type: string
                required: false
            # TODO Extract from appropriate changelog.
            release_notes:
                description: "Release notes"
                type: string
                required: true

env:
    NODE_VERSION: "16.x"

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Resolve ref
              run: |
                ref="${{github.ref}}"
                tag="${{github.event.inputs.tag_override}}"
                [ -n "$tag" ] && ref="refs/tags/$tag"
                echo "REF=$ref" >> $GITHUB_ENV
            - name: Fail if not running from a tag
              if: "!startsWith(env.REF , 'refs/tags/')"
              run: exit 1
            - name: Parse tag into env vars
              # Skip 'refs/tags/' (10 chars), read until '/' ("package"), then read the rest ("version").
              run: |
                  echo "${{env.REF}}" |
                    (read -n 10; read -d/ p; read v; echo "PACKAGE=$p"; echo "VERSION=$v") >> $GITHUB_ENV
#            - name: debug
#              run: echo "PACKAGE=$PACKAGE, VERSION=$VERSION"
            - name: Checkout
              uses: actions/checkout@v3
              with:
                ref: "${{env.REF}}"
            - name: Check that version matches 'package.json' up to build version
              working-directory: "./packages/${{env.PACKAGE}}"
              run: |
                  v="$(npm pkg get version | jq -r ".[\"@concordium/${{env.PACKAGE}}\"]")"
                  [[ "${{env.VERSION}}" = ${v}-* ]]
            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: "${{env.NODE_VERSION}}"
            - name: Install dependencies
              run: yarn install --immutable --check-cache
            - name: Build and archive
              working-directory: "./packages/${{env.PACKAGE}}"
              run: |
                yarn build
                zip dist.zip ./dist/*
            - name: Upload package as GitHub release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: "${{env.REF}}"
                  body: "${{github.event.inputs.release_notes}}"
                  files: "./packages/${{env.PACKAGE}}/dist.zip"
                  name: "${{env.PACKAGE}}: ${{env.VERSION}}"
                  generate_release_notes: false # automatic mechanism doesn't limit changes to the target project
